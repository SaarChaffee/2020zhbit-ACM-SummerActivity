果丰师兄最近在玩一个叫CS：GO的射击游戏。他发现有一些人会开“辅助软件”打这个游戏，常见的就是锁头。
当敌人的头部出现在屏幕上的某一个地方时，软件会将准心定位到敌人的头部，然后用软件的人只需要按下鼠标左键就能杀敌。
现在果丰师兄在研究这个外挂，遇到了一个算法问题需要你来解决。
输入：
输入有多组样例，请处理到文件结尾。
第一行有两个整数n、m，代表玩家屏幕分辨率为n*m(为方便计算，2<=n,m<=500)，即共有n*m个位置。
接下来会有n行m列个数字，代表每个位置(i,j)上的数字aij代表当前位置的是敌方头部的可能性。
当该数字是100时，代表软件100%确定敌人，这是目标位置。题目保证输入中有且只有一个位置的数字是100。
接下来一行会给一个坐标(a,b)，代表玩家其起始的准心在坐标处，这是起始位置，输入保证坐标在屏幕内。
软件会试图将玩家的准心从这个坐标位置移动到数字是100的位置处。
然而软件在移动玩家的准心时，如果准心经过的路径上的数字之和较大时，可能会导致软件不稳定。
为了使程序更加稳定，软件在将起始位置的准心移动到目标位置处时，移动轨迹上的数字和越小越好。
（注意，软件只能让玩家准心更靠近目标位置，而不能远离，比如目标在右下方时，软件只能将准心右移或下移）
输出：
准心从起始位置移动到目标位置经过的位置上的数字之和，这个数字和应该是所有可能路径中最小的。
input:
3 3
0 0 0
1 2 3
4 5 100
0 0
4 5
0 0 0 0 0
2 3 4 5 100
9 9 9 9 9
9 9 9 9 9
1 0

output:
103
114

tips：
样例1中，初始位置在左上角(0,0)，目标位置在右下角(2,2)，显然软件经过0->0->0->3->100所得到的数字和最小，所以103是答案。
样例2中，准心一开始在数字2处，要移到数字100处，从(1,0)移动到(1,4)会经过2,3,4,5,100这5个点，所以最终答案是114
此时，虽然软件走2->0->0->0->0->0->100所得到的数字和更小（102<114），但是软件没有那么聪明，
因为它不能“远离目标”，目标位置在初始位置的正右方，软件只能选择往右走这一条路。
